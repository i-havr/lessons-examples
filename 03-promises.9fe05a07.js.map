{"mappings":"YAqFqB,IAAfA,EAAS,CACb,cACA,UACA,kBACA,aACA,cAGEC,EAAc,EAEZC,EAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BA4BpC,SAASI,EAAkBC,GACzBR,EAAKI,YAAYK,YAAcD,C,CAGjC,SAASE,EAAoBF,GAC3BR,EAAKK,cAAcI,YAAcD,C,CAQnC,SAASG,EAAIC,GACX,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAQmBC,EAAKC,EARlBC,GAQaF,EARQ,IAQHC,EARS,KAS5BE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAPlDM,YAAW,WACTR,EAAQ,CAAEF,QAAOM,Q,GAChBA,E,IA5CPlB,EAAKC,SAASsB,iBAAiB,SAE/B,WACExB,GAAe,EACf,IAAMyB,EAAW1B,EAAO2B,IAAId,GAE5BJ,EAAkB,IAClBG,EAAoB,4CAKGgB,EAJPF,EAKhBX,QAAQc,KAAKD,GAASE,MAAK,SAAAC,G,IAAGjB,EAAKiB,EAALjB,MAAOM,EAAIW,EAAJX,KACnCX,EAAkB,cAAgDuB,OAAzBlB,EAAM,qBAAqCkB,OAALZ,EAAK,aAmBxF,SAA4BW,G,IAAEjB,EAAFiB,EAAEjB,MAAOM,EAATW,EAASX,KAAMa,EAAfF,EAAeG,YACnCC,EAAK,WAAkCH,OAAvBC,EAAY,aAA4BD,OAAjBlB,EAAM,aAAgBkB,OAALZ,EAAK,cACnElB,EAAKM,UAAU4B,mBAAmB,YAAaD,E,CApBfE,CAAX,CAAEvB,QAAOM,OAAMc,YAAAjC,G,IAItC,SAA0B2B,GACxBb,QAAQuB,IAAIV,GAASE,MAAK,WACxBlB,EAAoB,uC,IAZtB2B,CAAiBb,GAGnB,IAAyBE,C","sources":["src/js/03-promises.js"],"sourcesContent":["// ===============–ü–ï–†–í–´–ô –ü–†–ò–ú–ï–† –†–ï–ü–ï–¢–´=================\n// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n//   console.log(canFulfill);\n\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       resolve('–ü—Ä–æ–º–∏—Å –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ, —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º (–∏—Å–ø–æ–ª–Ω–µ–Ω, fulfilled)');\n//     }\n//     reject('–ü—Ä–æ–º–∏—Å –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π(–æ—Ç–∫–ª–æ–Ω–µ–Ω, rejected)');\n//   }, 1000);\n// });\n\n// promise\n//   .then(onFulfilled)\n//   .then(x => {\n//     console.log(x);\n//     return 10;\n//   })\n//   .then(y => {\n//     console.log(y);\n//   })\n//   .catch(error => console.log(error))\n//   .finally(() => {\n//     console.log('–Ø –±—É–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ');\n//   });\n\n// function onFulfilled(result) {\n//   console.log(`‚úÖ ${result}`);\n// }\n\n// function onRejected(error) {\n//   console.log(`‚ùå ${error}`);\n// }\n\n// ===============–í–¢–û–†–û–ô –ü–†–ò–ú–ï–† –†–ï–ü–ï–¢–´=================\n\n// const makeOrder = dish => {\n//   const DELAY = 1000;\n\n//   return new Promise((resolve, reject) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         resolve(`‚úÖ –í–æ—Ç –≤–∞—à–µ –±–ª—é–¥–æ: ${dish}`);\n//       }\n//       reject('‚ùå –£–ø—Å, —É –Ω–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–¥—É–∫—Ç—ã');\n//     }, DELAY);\n//   });\n// };\n\n// makeOrder('–ü–∏—Ä–æ–∂–æ–∫').then(onMakeOrderSuccess).catch(onMakeOrderError);\n\n// function onMakeOrderSuccess(result) {\n//   console.log(result);\n// }\n\n// function onMakeOrderError(result) {\n//   console.log(result);\n// }\n\n// ===============–¢–†–ï–¢–ò–ô –ü–†–ò–ú–ï–† –†–ï–ü–ï–¢–´=================\n\n// const fetchPokemonById = id => {\n//   return fetch(`https://pokeapi.co/api/v2/pokemon/${id}`).then(r => r.json());\n// };\n\n// fetchPokemonById(1).then(onFetchSuccess).catch(onFetchError);\n// fetchPokemonById(2).then(onFetchSuccess).catch(onFetchError);\n// fetchPokemonById(3).then(onFetchSuccess).catch(onFetchError);\n\n// function onFetchSuccess(pokemon) {\n//   console.log('onFetchSuccess -> onFetchSuccess');\n//   console.log(pokemon);\n// }\n\n// function onFetchError(error) {\n//   console.log('onFetchError -> onFetchError');\n//   console.log('–≠—Ç–æ –≤ –±–ª–æ–∫–µ catch');\n//   console.log(error);\n// }\n\n// ===============–ß–ï–¢–í–ï–†–¢–´–ô –ü–†–ò–ú–ï–† –†–ï–ü–ï–¢–´=================\n\nconst horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscuit',\n];\n\nlet raceCounter = 0;\n\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStartButton);\n\nfunction onStartButton() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField('üê¥ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');\n  determineWinner(promises);\n  waitForAllHorses(promises);\n}\n\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`ü•á –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time} –≤—Ä–µ–º–µ–Ω–∏`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\nfunction waitForAllHorses(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField('üèÅ –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏');\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\nfunction run(horse) {\n  return new Promise((resolve, reject) => {\n    const time = getRandomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"names":["$ce04d3a99e08e73b$var$horses","$ce04d3a99e08e73b$var$raceCounter","$ce04d3a99e08e73b$var$refs","startBtn","document","querySelector","winnerField","progressField","tableBody","$ce04d3a99e08e73b$var$updateWinnerField","message","textContent","$ce04d3a99e08e73b$var$updateProgressField","$ce04d3a99e08e73b$var$run","horse","Promise","resolve","reject","min","max","time","Math","floor","random","setTimeout","addEventListener","promises","map","horsesP","race","then","param","concat","raceCounter1","raceCounter","tr","insertAdjacentHTML","$ce04d3a99e08e73b$var$updateResultsTable","all","$ce04d3a99e08e73b$var$waitForAllHorses"],"version":3,"file":"03-promises.9fe05a07.js.map"}